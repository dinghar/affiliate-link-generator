import re
from models import AffiliateLinkRequest

# Note: Much of this was generated by ChatGPT so affiliate link structure should be double-checked

def generate_affiliate_link(request: AffiliateLinkRequest):
    print(request.url)
    company = identify_url_platform(request.url)
    match company:
        case "Amazon":
            return amazon_affiliate_link(request.url, "TEST")
        case "Walmart":
            return walmart_affiliate_link(request.url, "TEST")
        case "Target":
            return target_affiliate_link(request.url, "TEST")
        case _:
            return request.url

def identify_url_platform(product_url):
    # Amazon pattern
    if re.search(r'https?://(www\.)?amazon\.com/', product_url):
        return 'Amazon'

    # Walmart pattern
    if re.search(r'https?://(www\.)?walmart\.com/', product_url):
        return 'Walmart'

    # Target pattern
    if re.search(r'https?://(www\.)?target\.com/', product_url):
        return 'Target'

    return

def amazon_affiliate_link(url, affiliate_id):
    """Convert Amazon product URL into an affiliate link."""
    pattern = r'https?://www\.amazon\.com/([A-Za-z0-9\-]+)/dp/([A-Za-z0-9]+)(?:[/?].*)?'
    replacement = r'https://www.amazon.com/dp/\2/?tag=' + affiliate_id
    return re.sub(pattern, replacement, url)

def walmart_affiliate_link(url, affiliate_id):
    """Convert Walmart product URL into an affiliate link."""
    pattern = r'https?://www\.walmart\.com/ip/([A-Za-z0-9]+)(?:[/?].*)?'
    replacement = r'https://linksynergy.walmart.com/deeplink?id=' + affiliate_id + r'&mid=12345&murl=https://www.walmart.com/ip/\1'
    return re.sub(pattern, replacement, url)

def target_affiliate_link(url, affiliate_id):
    """Convert Target product URL into an affiliate link."""
    # This function might need adjustment depending on the exact format of your affiliate URLs.
    pattern = r'https?://www\.target\.com/c/(\d+)(?:[/?].*)?'
    replacement = f"https://goto.target.com/c/{affiliate_id}/" + r'\1'
    return re.sub(pattern, replacement, url)
